[{"C:\\Users\\Admin\\Desktop\\hw\\project\\money-control-app\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\hw\\project\\money-control-app\\src\\reportWebVitals.js":"2","C:\\Users\\Admin\\Desktop\\hw\\project\\money-control-app\\src\\App.js":"3","C:\\Users\\Admin\\Desktop\\hw\\project\\money-control-app\\src\\components\\Table\\Charges.js":"4","C:\\Users\\Admin\\Desktop\\hw\\project\\money-control-app\\src\\components\\Table\\Incomes.js":"5","C:\\Users\\Admin\\Desktop\\hw\\project\\money-control-app\\src\\components\\Table\\Charge.js":"6","C:\\Users\\Admin\\Desktop\\hw\\project\\money-control-app\\src\\components\\Table\\Income.js":"7"},{"size":543,"mtime":1610545500923,"results":"8","hashOfConfig":"9"},{"size":375,"mtime":1610536803365,"results":"10","hashOfConfig":"9"},{"size":418,"mtime":1610817565826,"results":"11","hashOfConfig":"9"},{"size":2825,"mtime":1610817565832,"results":"12","hashOfConfig":"9"},{"size":3104,"mtime":1610817565834,"results":"13","hashOfConfig":"9"},{"size":246,"mtime":1610817565830,"results":"14","hashOfConfig":"9"},{"size":252,"mtime":1610817565833,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1ozzjk",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Admin\\Desktop\\hw\\project\\money-control-app\\src\\index.js",[],["32","33"],"C:\\Users\\Admin\\Desktop\\hw\\project\\money-control-app\\src\\reportWebVitals.js",[],"C:\\Users\\Admin\\Desktop\\hw\\project\\money-control-app\\src\\App.js",["34"],"C:\\Users\\Admin\\Desktop\\hw\\project\\money-control-app\\src\\components\\Table\\Charges.js",[],"C:\\Users\\Admin\\Desktop\\hw\\project\\money-control-app\\src\\components\\Table\\Incomes.js",["35"],"import React, { useEffect, useState } from \"react\";\r\nimport Income from \"./Income\";\r\n\r\nfunction* createKeyGenerator() {\r\n  let id = 0;\r\n  while (true) {\r\n    yield id++ + \"income\";\r\n  }\r\n}\r\n\r\nfunction Incomes() {\r\n  const [incomes, setIncomes] = useState(\r\n    JSON.parse(localStorage.getItem(\"incomes\")) || [\r\n      {\r\n        category: \"fuck\",\r\n        money: \"12\",\r\n        description: \"shit\",\r\n        date: new Date().toLocaleDateString().replace(/\\./gi, \"/\"),\r\n        key: \"0income\",\r\n      },\r\n    ]\r\n  );\r\n  const category = React.createRef();\r\n  const description = React.createRef();\r\n  const money = React.createRef();\r\n  const keyGenerator = createKeyGenerator();\r\n  let incomesArr = [];\r\n\r\n  useEffect(() => {\r\n    if (!localStorage.getItem(\"incomes\")) {\r\n      localStorage.setItem(\r\n        \"incomes\",\r\n        JSON.stringify([\r\n          {\r\n            category: \"fuck\",\r\n            money: \"12\",\r\n            description: \"shit\",\r\n            date: new Date().toLocaleDateString().replace(/\\./gi, \"/\"),\r\n            key: \"0income\",\r\n          },\r\n        ])\r\n      );\r\n    }\r\n    incomesArr = JSON.parse(localStorage.getItem(\"incomes\"));\r\n  });\r\n\r\n  function addIncome(e) {\r\n    e.preventDefault();\r\n    console.log(incomesArr);\r\n    if (category.current.value&&money.current.value>0){\r\n      incomesArr.push({\r\n        key: keyGenerator.next().value,\r\n        category: category.current.value,\r\n        description: description.current.value,\r\n        money: money.current.value,\r\n        date: new Date().toLocaleDateString().replace(/\\./gi, \"/\"),\r\n      });\r\n      category.current.value = \"\";\r\n      description.current.value = \"\";\r\n      money.current.value = \"\";\r\n    }\r\n    console.log(incomesArr);\r\n    localStorage.setItem(\"incomes\", JSON.stringify(incomesArr));\r\n    console.log(JSON.parse(localStorage.getItem(\"incomes\")));\r\n    setIncomes(JSON.parse(localStorage.getItem(\"incomes\")));\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"Incomes\">\r\n      <form>\r\n        <input\r\n          className=\"input\"\r\n          type=\"text\"\r\n          placeholder=\"Category\"\r\n          ref={category}\r\n        ></input>\r\n        <input\r\n          className=\"input\"\r\n          type=\"text\"\r\n          placeholder=\"Description\"\r\n          ref={description}\r\n        ></input>\r\n        <input\r\n          className=\"input\"\r\n          type=\"number\"\r\n          placeholder=\"Money\"\r\n          ref={money}\r\n        ></input>\r\n        <button onClick={addIncome} className=\"btn\">\r\n          Додати\r\n        </button>\r\n      </form>\r\n      <table>\r\n        <tbody>\r\n          <tr key='head'>\r\n            <th>category</th>\r\n            <th>description</th>\r\n            <th>date</th>\r\n            <th>money</th>\r\n          </tr>\r\n          {incomes.map((income) => (\r\n            <Income\r\n              category={income.category}\r\n              description={income.description}\r\n              date={income.date}\r\n              money={income.money}\r\n              key={income.incomeKey}\r\n            />\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Incomes;\r\n","C:\\Users\\Admin\\Desktop\\hw\\project\\money-control-app\\src\\components\\Table\\Charge.js",[],"C:\\Users\\Admin\\Desktop\\hw\\project\\money-control-app\\src\\components\\Table\\Income.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":1,"column":8,"nodeType":"42","messageId":"43","endLine":1,"endColumn":12},{"ruleId":"44","severity":1,"message":"45","line":46,"column":18,"nodeType":"46","endLine":46,"endColumn":61},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Assignments to the 'incomesArr' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","no-global-assign","no-unsafe-negation"]