[{"D:\\Doc\\Cursor\\money-control-app\\src\\reportWebVitals.js":"1","D:\\Doc\\Cursor\\money-control-app\\src\\App.js":"2","D:\\Doc\\Cursor\\money-control-app\\src\\components\\Settings\\DataUser.js":"3","D:\\Doc\\Cursor\\money-control-app\\src\\components\\Settings\\Setting.js":"4","D:\\Doc\\Cursor\\money-control-app\\src\\components\\Table\\Charges.js":"5","D:\\Doc\\Cursor\\money-control-app\\src\\components\\Table\\Incomes.js":"6","D:\\Doc\\Cursor\\money-control-app\\src\\components\\Settings\\MainSetting.js":"7","D:\\Doc\\Cursor\\money-control-app\\src\\components\\Settings\\PartsForm\\Header.js":"8","D:\\Doc\\Cursor\\money-control-app\\src\\components\\Table\\Charge.js":"9","D:\\Doc\\Cursor\\money-control-app\\src\\components\\Table\\Income.js":"10","D:\\Doc\\Cursor\\money-control-app\\src\\components\\Table\\PartForTable\\Input.js":"11","D:\\Doc\\Cursor\\money-control-app\\src\\components\\Table\\PartForTable\\ButtonsForTable.js":"12","D:\\Doc\\Cursor\\money-control-app\\src\\components\\Settings\\FillForm.js":"13","D:\\Doc\\Cursor\\money-control-app\\src\\components\\Settings\\PartsForm\\ButtonSubmit.js":"14","D:\\Doc\\Cursor\\money-control-app\\src\\components\\Settings\\PartsForm\\Input.js":"15","D:\\Doc\\Cursor\\money-control-app\\src\\components\\Navigation\\NavPanel.js":"16","D:\\Doc\\Cursor\\money-control-app\\src\\index.js":"17"},{"size":375,"mtime":1610796700111,"results":"18","hashOfConfig":"19"},{"size":874,"mtime":1610924190518,"results":"20","hashOfConfig":"19"},{"size":650,"mtime":1610924190523,"results":"21","hashOfConfig":"19"},{"size":482,"mtime":1610924302741,"results":"22","hashOfConfig":"19"},{"size":3077,"mtime":1610924190562,"results":"23","hashOfConfig":"19"},{"size":3324,"mtime":1610924190572,"results":"24","hashOfConfig":"19"},{"size":5479,"mtime":1610924190536,"results":"25","hashOfConfig":"19"},{"size":436,"mtime":1610796700089,"results":"26","hashOfConfig":"19"},{"size":253,"mtime":1610796700092,"results":"27","hashOfConfig":"19"},{"size":259,"mtime":1610796700094,"results":"28","hashOfConfig":"19"},{"size":358,"mtime":1610796700098,"results":"29","hashOfConfig":"19"},{"size":390,"mtime":1610796700097,"results":"30","hashOfConfig":"19"},{"size":206,"mtime":1610880700974,"results":"31","hashOfConfig":"19"},{"size":322,"mtime":1610796700088,"results":"32","hashOfConfig":"19"},{"size":311,"mtime":1610924190542,"results":"33","hashOfConfig":"19"},{"size":645,"mtime":1610923622133,"results":"34","hashOfConfig":"19"},{"size":543,"mtime":1610924288652,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1xi5hf3",{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"D:\\Doc\\Cursor\\money-control-app\\src\\reportWebVitals.js",[],["77","78"],"D:\\Doc\\Cursor\\money-control-app\\src\\App.js",["79","80","81"],"import \"./css/style.css\";\r\nimport { Setting } from \"./components/Settings/Setting\";\r\nimport { useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Charges from \"./components/Table/Charges\";\r\nimport Incomes from \"./components/Table/Incomes\";\r\nimport Graphs from \"./components/Graphs/Graphs\";\r\nimport {Link,NavLink,Route, BrowserRouter as Router  }  from 'react-router-dom';\r\nimport NavPanel from \"./components/Navigation/NavPanel\"\r\n\r\nfunction App() {\r\n  if (!localStorage.getItem(\"incomes\")) {\r\n    localStorage.setItem(\r\n      \"incomes\",\r\n      JSON.stringify([\r\n        {\r\n          category: \"Salary\",\r\n          money: \"9999\",\r\n          description: \"\",\r\n          date: \"05.01.2021\",\r\n          key: \"05Salary9999\",\r\n        },\r\n        {\r\n          category: \"Investments\",\r\n          money: \"250\",\r\n          description: \"Bitcoin\",\r\n          date: \"07.01.2021\",\r\n          key: \"07Investments250\"\r\n        },\r\n        {\r\n          category: \"Rental\",\r\n          money: \"400\",\r\n          description: \"\",\r\n          date: \"03.01.2021\",\r\n          key: \"03Rent400\"\r\n        },\r\n        {\r\n          category: \"Investments\",\r\n          money: \"120\",\r\n          description: \"Netflix\",\r\n          date: \"10.01.2021\",\r\n          key: \"10Investments120\"\r\n        },\r\n        {\r\n          category: \"Salary\",\r\n          money: \"745\",\r\n          description: \"Side project\",\r\n          date: \"11.01.2021\",\r\n          key: \"11Salary745\",\r\n        }\r\n      ])\r\n    );\r\n  }\r\n\r\n  if (!localStorage.getItem(\"charges\")) {\r\n    localStorage.setItem(\r\n      \"charges\",\r\n      JSON.stringify([\r\n        {\r\n          category: \"Health\",\r\n          money: \"14\",\r\n          description: \"Headache tablets\",\r\n          date: \"01.01.2021\",\r\n          key: \"01Health14\",\r\n        },\r\n        {\r\n          category: \"Food\",\r\n          money: \"35\",\r\n          description: \"Pickles\",\r\n          date: \"01.01.2021\",\r\n          key: \"01Food35\",\r\n        },\r\n        {\r\n          category: \"Travel\",\r\n          money: \"400\",\r\n          description: \"Tickets to Mexico\",\r\n          date: \"15.01.2021\",\r\n          key: \"15Health400\",\r\n        },\r\n        {\r\n          category: \"Food\",\r\n          money: \"140\",\r\n          description: \"Dumplings\",\r\n          date: \"03.01.2021\",\r\n          key: \"03Health140\",\r\n        },\r\n        {\r\n          category: \"Health\",\r\n          money: \"215\",\r\n          description: \"Cough syrup\",\r\n          date: \"08.01.2021\",\r\n          key: \"08Health215\"\r\n        }\r\n      ])\r\n    );\r\n  }\r\n\r\n  if (!localStorage.getItem(\"incomeCategories\")) {\r\n    localStorage.setItem(\r\n      \"incomeCategories\",\r\n      JSON.stringify([\r\n        {\r\n          categoryId: 1,\r\n          name: \"Salary\",\r\n        },\r\n        {\r\n          categoryId: 2,\r\n          name: \"Investments\",\r\n        },\r\n        {\r\n          categoryId: 3,\r\n          name: \"Rental\",\r\n        },\r\n      ])\r\n    );\r\n  }\r\n\r\n  if (!localStorage.getItem(\"chargeCategories\")) {\r\n    localStorage.setItem(\r\n      \"chargeCategories\",\r\n      JSON.stringify([\r\n        {\r\n          categoryId: 1,\r\n          name: \"Health\",\r\n        },\r\n        {\r\n          categoryId: 2,\r\n          name: \"Food\",\r\n        },\r\n        {\r\n          categoryId: 3,\r\n          name: \"Travel\",\r\n        },\r\n      ])\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <NavPanel />\r\n\r\n        {/* <Route path=\"/home\" component={Home} />\r\n        <Route path=\"/categories\" component={Categories}/>\r\n        <Route path=\"/dataanalysis\" component={dataAnalysis}/> */}\r\n      </Router>\r\n\r\n      <Charges />\r\n      <Incomes />\r\n      <Setting />\r\n      <Graphs />\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","D:\\Doc\\Cursor\\money-control-app\\src\\components\\Settings\\DataUser.js",[],"D:\\Doc\\Cursor\\money-control-app\\src\\components\\Settings\\Setting.js",[],"D:\\Doc\\Cursor\\money-control-app\\src\\components\\Table\\Charges.js",[],"D:\\Doc\\Cursor\\money-control-app\\src\\components\\Table\\Incomes.js",["82"],"import React, { useEffect, useState } from \"react\";\r\nimport Income from \"./Income\";\r\nimport { Input } from './PartForTable/Input';\r\nimport { ButtonsForTable } from './PartForTable/ButtonsForTable';\r\n\r\nfunction* createKeyGenerator() {\r\n  let id = 0;\r\n  while (true) {\r\n    yield id++ + \"income\";\r\n  }\r\n}\r\n\r\nfunction Incomes() {\r\n  const [incomes, setIncomes] = useState(\r\n    JSON.parse(localStorage.getItem(\"incomes\")) || [\r\n      {\r\n        category: \"fuck\",\r\n        money: \"12\",\r\n        description: \"shit\",\r\n        date: new Date().toLocaleDateString().replace(/\\./gi, \"/\"),\r\n        key: \"0income\",\r\n      },\r\n    ]\r\n  );\r\n  const category = React.createRef();\r\n  const description = React.createRef();\r\n  const money = React.createRef();\r\n  const keyGenerator = createKeyGenerator();\r\n  let incomesArr = [];\r\n\r\n  useEffect(() => {\r\n    if (!localStorage.getItem(\"incomes\")) {\r\n      localStorage.setItem(\r\n        \"incomes\",\r\n        JSON.stringify([\r\n          {\r\n            category: \"fuck\",\r\n            money: \"12\",\r\n            description: \"shit\",\r\n            date: new Date().toLocaleDateString().replace(/\\./gi, \"/\"),\r\n            key: \"0income\",\r\n          },\r\n        ])\r\n      );\r\n    }\r\n    incomesArr = JSON.parse(localStorage.getItem(\"incomes\"));\r\n  });\r\n\r\n  function addIncome(e) {\r\n    e.preventDefault();\r\n    console.log(incomesArr);\r\n    if (category.current.value && money.current.value > 0) {\r\n      incomesArr.push({\r\n        key: keyGenerator.next().value,\r\n        category: category.current.value,\r\n        description: description.current.value,\r\n        money: money.current.value,\r\n        date: new Date().toLocaleDateString().replace(/\\./gi, \"/\"),\r\n      });\r\n      category.current.value = \"\";\r\n      description.current.value = \"\";\r\n      money.current.value = \"\";\r\n    }\r\n    console.log(incomesArr);\r\n    localStorage.setItem(\"incomes\", JSON.stringify(incomesArr));\r\n    console.log(JSON.parse(localStorage.getItem(\"incomes\")));\r\n    setIncomes(JSON.parse(localStorage.getItem(\"incomes\")));\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"incomes table\">\r\n      <form className=\"table__inputs\">\r\n        <Input\r\n          ref={category}\r\n          id='category'\r\n          type='text'\r\n          label='Category'\r\n          name='category'\r\n        />\r\n        <Input\r\n          ref={description}\r\n          id='description'\r\n          type='text'\r\n          label='Description'\r\n          name='description'\r\n        />\r\n        <Input\r\n          ref={money}\r\n          id='money'\r\n          type='number'\r\n          label='Money'\r\n          name='money'\r\n        />\r\n        <ButtonsForTable\r\n          clickBtn={addIncome}\r\n          className='table__btn'>\r\n          Add\r\n        </ButtonsForTable>\r\n      </form>\r\n      <table>\r\n        <tbody>\r\n          <tr key='head'>\r\n            <th>Category</th>\r\n            <th>Description</th>\r\n            <th>Date</th>\r\n            <th>Money</th>\r\n          </tr>\r\n          {incomes.map((income) => (\r\n            <Income\r\n              category={income.category}\r\n              description={income.description}\r\n              date={income.date}\r\n              money={income.money}\r\n              key={income.incomeKey}\r\n            />\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Incomes;\r\n","D:\\Doc\\Cursor\\money-control-app\\src\\components\\Settings\\MainSetting.js",["83","84"],"import React, { useState } from 'react';\r\nimport FillForm from './FillForm';\r\nimport { Input } from './PartsForm/Input';\r\nimport { ButtonSubmit } from './PartsForm/ButtonSubmit';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useData } from './DataUser';\r\nimport blankPhoto from '../../img/newUser/blank_photo.webp';\r\nimport * as yup from 'yup';\r\nimport \"yup-phone\";\r\nimport parsePhoneNumberFromString from 'libphonenumber-js';\r\n\r\nconst MESSAGE_FOR_FILL = 'Fill this field';\r\nconst PHONE_REGEXP = /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/;\r\nconst TYPE_AVATAR = [\"image/jpg\",\r\n    \"image/jpeg\",\r\n    \"image/gif\",\r\n    \"image/png\"];\r\nconst phoneRegExp = /^\\+(?:[0-9] ?){6,14}[0-9]$/;\r\n\r\n\r\nconst schema = yup.object().shape({\r\n    firstName:\r\n        yup.string()\r\n            .matches(REGULAR_NOT_NUMBER, 'First name should be without numbers')\r\n            .required(MESSAGE_FOR_FILL)\r\n            .min(2, \"At least two characters\"),\r\n    lastName:\r\n        yup.string()\r\n            .matches(REGULAR_NOT_NUMBER, 'Last name should be without numbers')\r\n            .required(MESSAGE_FOR_FILL)\r\n            .min(2, \"At least two characters\"),\r\n    email:\r\n        yup.string()\r\n            .email(\"Email. should have correct format\")\r\n            .required(MESSAGE_FOR_FILL),\r\n    phoneNumber:\r\n        yup.string()\r\n            .required(MESSAGE_FOR_FILL)\r\n            .matches(PHONE_REGEXP, 'Phone number is invalid'),\r\n    loadAvatar:\r\n        yup.mixed()\r\n            .test(\r\n                \"fileFormat\",\r\n                \"Unsupported Format\",\r\n                value => value && TYPE_AVATAR.includes(value[0].type)\r\n            )\r\n            .matches(phoneRegExp, 'Phone number is invalid')\r\n});\r\n\r\nconst formatTheNumber = (inputNumber) => {\r\n    const phoneNumber = parsePhoneNumberFromString(inputNumber);\r\n    return (!phoneNumber) ? inputNumber :\r\n        phoneNumber.formatInternational();\r\n};\r\n\r\nexport const MainSetting = () => {\r\n    const { data, setValues } = useData();\r\n    const { register, handleSubmit, errors } = useForm({\r\n        mode: 'onBlur',\r\n        resolver: yupResolver(schema)\r\n    });\r\n    const [profilePhoto, setAvatar] = useState(blankPhoto);\r\n\r\n    localStorage.setItem(\"avatar\", (blankPhoto));\r\n\r\n    const photoHandle = (event) => {\r\n        const newPhoto = new FileReader();\r\n        newPhoto.onload = () => {\r\n            if (newPhoto.readyState === 2) {\r\n                setAvatar(newPhoto.result)\r\n            }\r\n        }\r\n\r\n        newPhoto.readAsDataURL(event.target.files[0]);\r\n    }\r\n    const onSubmit = (data) => {\r\n        // кудась перейти\r\n        console.log(data)\r\n        setValues(data);\r\n    };\r\n    return (\r\n        <FillForm onSubmit={handleSubmit(onSubmit)} >\r\n            <div className='form__head'>\r\n                <div className=\"form__names\">\r\n                    <Input\r\n                        ref={register}\r\n                        id='firstName'\r\n                        type='text'\r\n                        label='First name'\r\n                        name='firstName'\r\n                        required\r\n                        error={!!errors.firstName}\r\n                        helperText={errors?.firstName?.message}\r\n                    />\r\n                    <Input\r\n                        ref={register}\r\n                        id='lastName'\r\n                        type='text'\r\n                        label='Last name'\r\n                        name='lastName'\r\n                        required\r\n                        error={!!errors.lastName}\r\n                        helperText={errors?.lastName?.message}\r\n                    />\r\n                </div>\r\n\r\n                <div className='form__avatar'>\r\n                    <div className='form__avatar--block'><img src={profilePhoto} className='avatar' /></div>\r\n                    <Input\r\n                        ref={register}\r\n                        className='form__avatar--load'\r\n                        name='loadAvatar'\r\n                        type='file'\r\n                        id='loadAvatar'\r\n                        onChange={photoHandle}\r\n                        error={!!errors.loadAvatar}\r\n                        helperText={errors?.loadAvatar?.message}\r\n                    />\r\n                </div>\r\n\r\n            <div className=\"form__names\">\r\n                <Input\r\n                    ref={register}\r\n                    id='firstName'\r\n                    type='text'\r\n                    label='First name'\r\n                    name='firstName'\r\n                    required\r\n                    error={!!errors.firstName}\r\n                    helperText={errors?.firstName?.message}\r\n                />\r\n                <Input\r\n                    ref={register}\r\n                    id='lastName'\r\n                    type='text'\r\n                    label='Last name'\r\n                    name='lastName'\r\n                    required\r\n                    error={!!errors.lastName}\r\n                    helperText={errors?.lastName?.message}\r\n                />\r\n            </div>\r\n            <Input\r\n                ref={register}\r\n                id='nickname'\r\n                type='text'\r\n                label='Nickname'\r\n                name='nickname'\r\n                defaultValue='@'\r\n            />\r\n           <Input\r\n                ref={register}\r\n                id='email'\r\n                type='email'\r\n                label='E-mail'\r\n                name='email'\r\n                required\r\n                error={!!errors.email}\r\n                helperText={errors?.email?.message}\r\n            />\r\n            <Input\r\n                ref={register}\r\n                id='phoneNumber'\r\n                type='tel'\r\n                label='Phone number'\r\n                name='phoneNumber'\r\n                defaultValue='+38'\r\n                error={!!errors.phoneNumber}\r\n                helperText={errors?.phoneNumber?.message}\r\n                onChange={(event) => event.target.value = formatTheNumber(event.target.value)}\r\n            />\r\n            <ButtonSubmit>Ok</ButtonSubmit>\r\n\r\n        </FillForm>\r\n\r\n    )\r\n}","D:\\Doc\\Cursor\\money-control-app\\src\\components\\Settings\\PartsForm\\Header.js",[],"D:\\Doc\\Cursor\\money-control-app\\src\\components\\Table\\Charge.js",[],"D:\\Doc\\Cursor\\money-control-app\\src\\components\\Table\\Income.js",[],"D:\\Doc\\Cursor\\money-control-app\\src\\components\\Table\\PartForTable\\Input.js",[],"D:\\Doc\\Cursor\\money-control-app\\src\\components\\Table\\PartForTable\\ButtonsForTable.js",["85"],"import React, { forwardRef } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport const ButtonsForTable = ({ children, clickBtn, props }) => {\r\n    return (\r\n        <Button\r\n            type=\"button\"\r\n            size=\"medium\"\r\n            variant='contained'\r\n            onClick={clickBtn}\r\n            {...props} >\r\n            {children}\r\n        </Button>\r\n    )\r\n}","D:\\Doc\\Cursor\\money-control-app\\src\\components\\Settings\\FillForm.js",[],"D:\\Doc\\Cursor\\money-control-app\\src\\components\\Settings\\PartsForm\\ButtonSubmit.js",[],"D:\\Doc\\Cursor\\money-control-app\\src\\components\\Settings\\PartsForm\\Input.js",[],["86","87"],"D:\\Doc\\Cursor\\money-control-app\\src\\components\\Navigation\\NavPanel.js",["88","89"],"import React from \"react\";\r\nimport { Link, NavLink, BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nexport default function NavPanel() {\r\n  return (\r\n    <nav className=\"nav\">\r\n        <div>here will be a logo</div>\r\n        <div>\r\n        <NavLink className=\"link\" activeClassName=\"active-link\" to=\"/home\">\r\n          Home\r\n        </NavLink>\r\n        <NavLink className=\"link\" activeClassName=\"active-link\" to=\"/categories\">\r\n          Categories\r\n        </NavLink>\r\n        <NavLink className=\"link\" activeClassName=\"active-link\" to=\"/dataAnalysis\">\r\n          Data analysis\r\n        </NavLink>\r\n        </div>\r\n      </nav>\r\n  );\r\n}\r\n","D:\\Doc\\Cursor\\money-control-app\\src\\index.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":2,"column":9,"nodeType":"96","messageId":"97","endLine":2,"endColumn":13},{"ruleId":"94","severity":1,"message":"98","line":2,"column":14,"nodeType":"96","messageId":"97","endLine":2,"endColumn":21},{"ruleId":"94","severity":1,"message":"99","line":2,"column":22,"nodeType":"96","messageId":"97","endLine":2,"endColumn":27},{"ruleId":"100","severity":1,"message":"101","line":46,"column":18,"nodeType":"102","endLine":46,"endColumn":61},{"ruleId":"94","severity":1,"message":"103","line":57,"column":13,"nodeType":"96","messageId":"97","endLine":57,"endColumn":17},{"ruleId":"104","severity":1,"message":"105","line":108,"column":58,"nodeType":"106","endLine":108,"endColumn":103},{"ruleId":"94","severity":1,"message":"107","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":27},{"ruleId":"90","replacedBy":"108"},{"ruleId":"92","replacedBy":"109"},{"ruleId":"94","severity":1,"message":"95","line":2,"column":10,"nodeType":"96","messageId":"97","endLine":2,"endColumn":14},{"ruleId":"94","severity":1,"message":"110","line":2,"column":42,"nodeType":"96","messageId":"97","endLine":2,"endColumn":48},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","'Route' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'incomesArr' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'data' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'forwardRef' is defined but never used.",["111"],["112"],"'Router' is defined but never used.","no-global-assign","no-unsafe-negation"]