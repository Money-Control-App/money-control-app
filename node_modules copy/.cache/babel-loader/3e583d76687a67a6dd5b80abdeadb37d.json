{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Doc\\\\Cursor\\\\money-control-app\\\\src\\\\components\\\\Table\\\\Charges.js\";\nimport React from \"react\";\nimport Charge from \"./Charge\";\nimport { Input } from './PartForTable/Input';\nimport { ButtonsForTable } from './PartForTable/ButtonsForTable';\nimport \"../../css/elements-style.css\";\n\nfunction* createKeyGenerator() {\n  let id = 0;\n\n  while (true) {\n    yield id++ + \"charge\";\n  }\n}\n\nclass Charges extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.clearInputs = () => {\n      this.category.current.value = \"\";\n      this.description.current.value = \"\";\n      this.money.current.value = \"\";\n    };\n\n    this.keyGenerator = createKeyGenerator();\n\n    this.addCharge = e => {\n      e.preventDefault();\n\n      if (this.money.current.value, this.category.current.value && this.money.current.value > 0) {\n        this.charges = JSON.parse(localStorage.getItem(\"charges\"));\n        this.charges.push({\n          chargeKey: this.keyGenerator.next().value,\n          category: this.category.current.value || \"\",\n          description: this.description.current.value,\n          money: this.money.current.value,\n          date: new Date().toLocaleDateString().replace(/\\./gi, \"/\")\n        });\n        this.clearInputs();\n        console.log(this.charges);\n        localStorage.setItem(\"charges\", JSON.stringify(this.charges));\n        this.setState({\n          charges: JSON.parse(localStorage.getItem(\"charges\"))\n        });\n      }\n    };\n\n    this.category = /*#__PURE__*/React.createRef();\n    this.description = /*#__PURE__*/React.createRef();\n    this.money = /*#__PURE__*/React.createRef();\n    this.charges = JSON.parse(localStorage.getItem(\"charges\"));\n    this.state = {\n      charges: []\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charges table\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"table__inputs table__charges\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          ref: this.category,\n          id: \"category\",\n          type: \"text\",\n          label: \"Category\",\n          name: \"category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          ref: this.description,\n          id: \"description\",\n          type: \"text\",\n          label: \"Description\",\n          name: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          ref: this.description,\n          id: \"money\",\n          type: \"number\",\n          label: \"Money\",\n          name: \"money\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonsForTable, {\n          clickBtn: this.addCharge,\n          className: \"table__btn\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Money\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), this.state.charges.map(charge => /*#__PURE__*/_jsxDEV(Charge, {\n            category: charge.category,\n            description: charge.description,\n            date: charge.date,\n            money: charge.money\n          }, charge.chargeKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Charges;","map":{"version":3,"sources":["D:/Doc/Cursor/money-control-app/src/components/Table/Charges.js"],"names":["React","Charge","Input","ButtonsForTable","createKeyGenerator","id","Charges","Component","constructor","props","clearInputs","category","current","value","description","money","keyGenerator","addCharge","e","preventDefault","charges","JSON","parse","localStorage","getItem","push","chargeKey","next","date","Date","toLocaleDateString","replace","console","log","setItem","stringify","setState","createRef","state","componentDidMount","render","map","charge"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,KAAT,QAAsB,sBAAtB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAO,8BAAP;;AAEA,UAAUC,kBAAV,GAA+B;AAC7B,MAAIC,EAAE,GAAG,CAAT;;AACA,SAAO,IAAP,EAAa;AACX,UAAMA,EAAE,KAAK,QAAb;AACD;AACF;;AAED,MAAMC,OAAN,SAAsBN,KAAK,CAACO,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAanBC,WAbmB,GAaL,MAAM;AAClB,WAAKC,QAAL,CAAcC,OAAd,CAAsBC,KAAtB,GAA8B,EAA9B;AACA,WAAKC,WAAL,CAAiBF,OAAjB,CAAyBC,KAAzB,GAAiC,EAAjC;AACA,WAAKE,KAAL,CAAWH,OAAX,CAAmBC,KAAnB,GAA2B,EAA3B;AACD,KAjBkB;;AAAA,SAmBnBG,YAnBmB,GAmBJZ,kBAAkB,EAnBd;;AAAA,SAqBnBa,SArBmB,GAqBNC,CAAD,IAAO;AACjBA,MAAAA,CAAC,CAACC,cAAF;;AACA,UAAK,KAAKJ,KAAL,CAAWH,OAAX,CAAmBC,KAAnB,EAA0B,KAAKF,QAAL,CAAcC,OAAd,CAAsBC,KAAtB,IAA+B,KAAKE,KAAL,CAAWH,OAAX,CAAmBC,KAAnB,GAA2B,CAAzF,EAA6F;AAC3F,aAAKO,OAAL,GAAeC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAf;AACA,aAAKJ,OAAL,CAAaK,IAAb,CAAkB;AAChBC,UAAAA,SAAS,EAAE,KAAKV,YAAL,CAAkBW,IAAlB,GAAyBd,KADpB;AAEhBF,UAAAA,QAAQ,EAAE,KAAKA,QAAL,CAAcC,OAAd,CAAsBC,KAAtB,IAA+B,EAFzB;AAGhBC,UAAAA,WAAW,EAAE,KAAKA,WAAL,CAAiBF,OAAjB,CAAyBC,KAHtB;AAIhBE,UAAAA,KAAK,EAAE,KAAKA,KAAL,CAAWH,OAAX,CAAmBC,KAJV;AAKhBe,UAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,kBAAX,GAAgCC,OAAhC,CAAwC,MAAxC,EAAgD,GAAhD;AALU,SAAlB;AAOA,aAAKrB,WAAL;AACAsB,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,OAAjB;AACAG,QAAAA,YAAY,CAACW,OAAb,CAAqB,SAArB,EAAgCb,IAAI,CAACc,SAAL,CAAe,KAAKf,OAApB,CAAhC;AACA,aAAKgB,QAAL,CAAc;AACZhB,UAAAA,OAAO,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX;AADG,SAAd;AAGD;AACF,KAvCkB;;AAEjB,SAAKb,QAAL,gBAAgBX,KAAK,CAACqC,SAAN,EAAhB;AACA,SAAKvB,WAAL,gBAAmBd,KAAK,CAACqC,SAAN,EAAnB;AACA,SAAKtB,KAAL,gBAAaf,KAAK,CAACqC,SAAN,EAAb;AACA,SAAKjB,OAAL,GAAeC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAf;AACA,SAAKc,KAAL,GAAa;AACXlB,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAEDmB,EAAAA,iBAAiB,GAAG,CAAG;;AA8BvBC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AAAM,QAAA,SAAS,EAAC,8BAAhB;AAAA,gCACE,QAAC,KAAD;AACE,UAAA,GAAG,EAAE,KAAK7B,QADZ;AAEE,UAAA,EAAE,EAAC,UAFL;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,KAAK,EAAC,UAJR;AAKE,UAAA,IAAI,EAAC;AALP;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,KAAD;AACE,UAAA,GAAG,EAAE,KAAKG,WADZ;AAEE,UAAA,EAAE,EAAC,aAFL;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,KAAK,EAAC,aAJR;AAKE,UAAA,IAAI,EAAC;AALP;AAAA;AAAA;AAAA;AAAA,gBARF,eAeE,QAAC,KAAD;AACE,UAAA,GAAG,EAAE,KAAKA,WADZ;AAEE,UAAA,EAAE,EAAC,OAFL;AAGE,UAAA,IAAI,EAAC,QAHP;AAIE,UAAA,KAAK,EAAC,OAJR;AAKE,UAAA,IAAI,EAAC;AALP;AAAA;AAAA;AAAA;AAAA,gBAfF,eAuBE,QAAC,eAAD;AACE,UAAA,QAAQ,EAAE,KAAKG,SADjB;AAEE,UAAA,SAAS,EAAC,YAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eA8BE;AAAA,+BACE;AAAA,kCACE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAOG,KAAKqB,KAAL,CAAWlB,OAAX,CAAmBqB,GAAnB,CAAwBC,MAAD,iBACtB,QAAC,MAAD;AACE,YAAA,QAAQ,EAAEA,MAAM,CAAC/B,QADnB;AAEE,YAAA,WAAW,EAAE+B,MAAM,CAAC5B,WAFtB;AAGE,YAAA,IAAI,EAAE4B,MAAM,CAACd,IAHf;AAIE,YAAA,KAAK,EAAEc,MAAM,CAAC3B;AAJhB,aAKO2B,MAAM,CAAChB,SALd;AAAA;AAAA;AAAA;AAAA,kBADD,CAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA9BF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAoDD;;AA/FmC;;AAkGtC,eAAepB,OAAf","sourcesContent":["import React from \"react\";\r\nimport Charge from \"./Charge\";\r\nimport { Input } from './PartForTable/Input';\r\nimport { ButtonsForTable } from './PartForTable/ButtonsForTable';\r\nimport \"../../css/elements-style.css\";\r\n\r\nfunction* createKeyGenerator() {\r\n  let id = 0;\r\n  while (true) {\r\n    yield id++ + \"charge\";\r\n  }\r\n}\r\n\r\nclass Charges extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.category = React.createRef();\r\n    this.description = React.createRef();\r\n    this.money = React.createRef();\r\n    this.charges = JSON.parse(localStorage.getItem(\"charges\"));\r\n    this.state = {\r\n      charges: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() { }\r\n\r\n  clearInputs = () => {\r\n    this.category.current.value = \"\";\r\n    this.description.current.value = \"\";\r\n    this.money.current.value = \"\";\r\n  };\r\n\r\n  keyGenerator = createKeyGenerator();\r\n\r\n  addCharge = (e) => {\r\n    e.preventDefault();\r\n    if ((this.money.current.value, this.category.current.value && this.money.current.value > 0)) {\r\n      this.charges = JSON.parse(localStorage.getItem(\"charges\"));\r\n      this.charges.push({\r\n        chargeKey: this.keyGenerator.next().value,\r\n        category: this.category.current.value || \"\",\r\n        description: this.description.current.value,\r\n        money: this.money.current.value,\r\n        date: new Date().toLocaleDateString().replace(/\\./gi, \"/\"),\r\n      });\r\n      this.clearInputs();\r\n      console.log(this.charges);\r\n      localStorage.setItem(\"charges\", JSON.stringify(this.charges));\r\n      this.setState({\r\n        charges: JSON.parse(localStorage.getItem(\"charges\")),\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"charges table\">\r\n        <form className=\"table__inputs table__charges\">\r\n          <Input\r\n            ref={this.category}\r\n            id='category'\r\n            type='text'\r\n            label='Category'\r\n            name='category'\r\n          />\r\n          <Input\r\n            ref={this.description}\r\n            id='description'\r\n            type='text'\r\n            label='Description'\r\n            name='description'\r\n          />\r\n          <Input\r\n            ref={this.description}\r\n            id='money'\r\n            type='number'\r\n            label='Money'\r\n            name='money'\r\n          />\r\n\r\n          <ButtonsForTable\r\n            clickBtn={this.addCharge}\r\n            className='table__btn'>\r\n            Add\r\n          </ButtonsForTable>\r\n        </form>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <th>Category</th>\r\n              <th>Description</th>\r\n              <th>Date</th>\r\n              <th>Money</th>\r\n            </tr>\r\n            {this.state.charges.map((charge) => (\r\n              <Charge\r\n                category={charge.category}\r\n                description={charge.description}\r\n                date={charge.date}\r\n                money={charge.money}\r\n                key={charge.chargeKey}\r\n              />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Charges;\r\n"]},"metadata":{},"sourceType":"module"}