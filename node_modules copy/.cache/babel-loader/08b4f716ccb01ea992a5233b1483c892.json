{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Doc\\\\Cursor\\\\money-control-app\\\\src\\\\components\\\\Table\\\\Incomes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Income from \"./Income\";\nimport { Input } from './PartForTable/Input';\nimport { ButtonsForTable } from './PartForTable/ButtonsForTable';\n\nfunction* createKeyGenerator() {\n  let id = 0;\n\n  while (true) {\n    yield id++ + \"income\";\n  }\n}\n\nfunction Incomes() {\n  _s();\n\n  const [incomes, setIncomes] = useState(JSON.parse(localStorage.getItem(\"incomes\")) || [{\n    category: \"fuck\",\n    money: \"12\",\n    description: \"shit\",\n    date: new Date().toLocaleDateString().replace(/\\./gi, \"/\"),\n    key: \"0income\"\n  }]);\n  const category = /*#__PURE__*/React.createRef();\n  const description = /*#__PURE__*/React.createRef();\n  const money = /*#__PURE__*/React.createRef();\n  const keyGenerator = createKeyGenerator();\n  let incomesArr = [];\n  useEffect(() => {\n    if (!localStorage.getItem(\"incomes\")) {\n      localStorage.setItem(\"incomes\", JSON.stringify([{\n        category: \"fuck\",\n        money: \"12\",\n        description: \"shit\",\n        date: new Date().toLocaleDateString().replace(/\\./gi, \"/\"),\n        key: \"0income\"\n      }]));\n    }\n\n    incomesArr = JSON.parse(localStorage.getItem(\"incomes\"));\n  });\n\n  function addIncome(e) {\n    e.preventDefault();\n    console.log(incomesArr);\n\n    if (category.current.value && money.current.value > 0) {\n      incomesArr.push({\n        key: keyGenerator.next().value,\n        category: category.current.value,\n        description: description.current.value,\n        money: money.current.value,\n        date: new Date().toLocaleDateString().replace(/\\./gi, \"/\")\n      });\n      category.current.value = \"\";\n      description.current.value = \"\";\n      money.current.value = \"\";\n    }\n\n    console.log(incomesArr);\n    localStorage.setItem(\"incomes\", JSON.stringify(incomesArr));\n    console.log(JSON.parse(localStorage.getItem(\"incomes\")));\n    setIncomes(JSON.parse(localStorage.getItem(\"incomes\")));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"incomes table\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"table__inputs\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        ref: category,\n        id: \"category\",\n        type: \"text\",\n        label: \"Category\",\n        name: \"category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ref: description,\n        id: \"description\",\n        type: \"text\",\n        label: \"Description\",\n        name: \"description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ref: money,\n        id: \"money\",\n        type: \"number\",\n        label: \"Money\",\n        name: \"money\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonsForTable, {\n        clickBtn: addIncome,\n        className: \"table__btn\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Money\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, 'head', true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), incomes.map(income => /*#__PURE__*/_jsxDEV(Income, {\n          category: income.category,\n          description: income.description,\n          date: income.date,\n          money: income.money\n        }, income.incomeKey, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Incomes, \"pkv1b5dcNW88z56sXrymuP62mY4=\");\n\n_c = Incomes;\nexport default Incomes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Incomes\");","map":{"version":3,"sources":["D:/Doc/Cursor/money-control-app/src/components/Table/Incomes.js"],"names":["React","useEffect","useState","Income","Input","ButtonsForTable","createKeyGenerator","id","Incomes","incomes","setIncomes","JSON","parse","localStorage","getItem","category","money","description","date","Date","toLocaleDateString","replace","key","createRef","keyGenerator","incomesArr","setItem","stringify","addIncome","e","preventDefault","console","log","current","value","push","next","map","income","incomeKey"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Income from \"./Income\";\r\nimport { Input } from './PartForTable/Input';\r\nimport { ButtonsForTable } from './PartForTable/ButtonsForTable';\r\n\r\nfunction* createKeyGenerator() {\r\n  let id = 0;\r\n  while (true) {\r\n    yield id++ + \"income\";\r\n  }\r\n}\r\n\r\nfunction Incomes() {\r\n  const [incomes, setIncomes] = useState(\r\n    JSON.parse(localStorage.getItem(\"incomes\")) || [\r\n      {\r\n        category: \"fuck\",\r\n        money: \"12\",\r\n        description: \"shit\",\r\n        date: new Date().toLocaleDateString().replace(/\\./gi, \"/\"),\r\n        key: \"0income\",\r\n      },\r\n    ]\r\n  );\r\n  const category = React.createRef();\r\n  const description = React.createRef();\r\n  const money = React.createRef();\r\n  const keyGenerator = createKeyGenerator();\r\n  let incomesArr = [];\r\n\r\n  useEffect(() => {\r\n    if (!localStorage.getItem(\"incomes\")) {\r\n      localStorage.setItem(\r\n        \"incomes\",\r\n        JSON.stringify([\r\n          {\r\n            category: \"fuck\",\r\n            money: \"12\",\r\n            description: \"shit\",\r\n            date: new Date().toLocaleDateString().replace(/\\./gi, \"/\"),\r\n            key: \"0income\",\r\n          },\r\n        ])\r\n      );\r\n    }\r\n    incomesArr = JSON.parse(localStorage.getItem(\"incomes\"));\r\n  });\r\n\r\n  function addIncome(e) {\r\n    e.preventDefault();\r\n    console.log(incomesArr);\r\n    if (category.current.value && money.current.value > 0) {\r\n      incomesArr.push({\r\n        key: keyGenerator.next().value,\r\n        category: category.current.value,\r\n        description: description.current.value,\r\n        money: money.current.value,\r\n        date: new Date().toLocaleDateString().replace(/\\./gi, \"/\"),\r\n      });\r\n      category.current.value = \"\";\r\n      description.current.value = \"\";\r\n      money.current.value = \"\";\r\n    }\r\n    console.log(incomesArr);\r\n    localStorage.setItem(\"incomes\", JSON.stringify(incomesArr));\r\n    console.log(JSON.parse(localStorage.getItem(\"incomes\")));\r\n    setIncomes(JSON.parse(localStorage.getItem(\"incomes\")));\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"incomes table\">\r\n      <form className=\"table__inputs\">\r\n        <Input\r\n          ref={category}\r\n          id='category'\r\n          type='text'\r\n          label='Category'\r\n          name='category'\r\n        />\r\n        <Input\r\n          ref={description}\r\n          id='description'\r\n          type='text'\r\n          label='Description'\r\n          name='description'\r\n        />\r\n        <Input\r\n          ref={money}\r\n          id='money'\r\n          type='number'\r\n          label='Money'\r\n          name='money'\r\n        />\r\n        <ButtonsForTable\r\n          clickBtn={addIncome}\r\n          className='table__btn'>\r\n          Add\r\n        </ButtonsForTable>\r\n      </form>\r\n      <table>\r\n        <tbody>\r\n          <tr key='head'>\r\n            <th>Category</th>\r\n            <th>Description</th>\r\n            <th>Date</th>\r\n            <th>Money</th>\r\n          </tr>\r\n          {incomes.map((income) => (\r\n            <Income\r\n              category={income.category}\r\n              description={income.description}\r\n              date={income.date}\r\n              money={income.money}\r\n              key={income.incomeKey}\r\n            />\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Incomes;\r\n"]},"metadata":{},"sourceType":"module"}